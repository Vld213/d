import re
import discord
from discord.ext import commands
from discord.ext.commands.core import cooldown
from dislash.interactions.message_components import ActionRow, Button, ButtonStyle, SelectMenu, SelectOption
from discord import utils
from discord.utils import get
from config import Color
import messages
import word
import punishments
import asyncio
import mongo
import time
import datetime
import typing
import random
import cache
from profilactic import measures
from word import ago
import aiohttp
import time
import datetime

class Logs(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.group(aliases=['log', 'logchannel', 'log-channel', 'lc'])
    @commands.cooldown(1, 5, commands.BucketType.guild)
    @commands.check(messages.check_perms)
    async def log_channel(self, ctx):
        if ctx.invoked_subcommand is None:
            embed = discord.Embed(color=Color.primary)
            embed.title = "üìù | –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤"
            embed.add_field(name="–ö–æ–º–∞–Ω–¥—ã", inline=False, value=f"""
`{ctx.prefix}log-channel set` ‚Äì —É–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
`{ctx.prefix}log-channel remove` ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
            """)
            try:
                channel = self.bot.get_channel(cache.logs_data[ctx.guild.id]["default-channel"]).mention
            except AttributeError:
                channel = None
            except KeyError:
                channel = None

            if channel:
                embed.add_field(name="–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤", value=channel)

            await ctx.send(embed=embed)

    @log_channel.command(aliases=['set'])
    async def __set(self, ctx, channel1: discord.TextChannel):
        try:
            channel = cache.logs_data[ctx.guild.id]["default-channel"]
        except KeyError:
            channel = None

        if channel:
            if channel1.id == channel:
                return await messages.err(ctx, "–ù–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º.")

        webhook = await channel1.create_webhook(name="Regular Defender Logs")
        await webhook.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª —É–∫–∞–∑–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —É–¥–∞–ª—è–π—Ç–µ —ç—Ç–æ—Ç –≤–µ–±—Ö—É–∫. –°–ø–∞—Å–∏–±–æ!")
        cache.logs.add(ctx.guild.id, {"default-channel": channel1.id, "default-webhook": webhook.id})
        embed = discord.Embed(
            title="‚úÖ | –ì–æ—Ç–æ–≤–æ", 
            description=f"–ö–∞–Ω–∞–ª {channel1.mention} —É–∫–∞–∑–∞–Ω –∫–∞–∫ –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤.", 
            color=Color.success
        )
        await ctx.send(embed=embed)

    @log_channel.command(aliases=['delete', 'remove'])
    async def __remove(self, ctx):
        try:
            channel = self.bot.get_channel(cache.logs_data[ctx.guild.id]["default-channel"])
        except KeyError:
            channel = None

        if not channel:
            return await messages.err(ctx, "–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –±—ã–ª —É–∫–∞–∑–∞–Ω —Ä–∞–Ω–µ–µ!")
        
        cache.logs.add(ctx.guild.id, {"default-channel": None})

        embed = discord.Embed(
            title="‚úÖ | –ì–æ—Ç–æ–≤–æ", 
            description=f"–ö–∞–Ω–∞–ª {channel.mention} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞–Ω–∞–ª–æ–º –¥–ª—è –ª–æ–≥–æ–≤.", 
            color=Color.success
        )
        await ctx.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_channel_create(self, channel):
        channel1 = self.bot.get_channel(cache.logs_data[channel.guild.id]["default-channel"])
        embed = discord.Embed(title="–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª", description=f'''**–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:** `{channel.name}`\n\n**–¢–∏–ø –∫–∞–Ω–∞–ª–∞:** `{str(channel.type).replace("text", "–¢–µ–∫—Å—Ç–æ–≤—ã–π").replace("voice", "–ì–æ–ª–æ—Å–æ–≤–æ–π").replace("category", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è")}`\n\n**ID –∫–∞–Ω–∞–ª–∞:** `{channel.id}`\n\n**–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:** `{channel.category}`''')
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{channel.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{channel.guild.icon_url}")
        embed.set_author(name=f"{channel.guild.name}", icon_url=f"{channel.guild.icon_url}")
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_channel_delete(self, channel):
        channel1 = self.bot.get_channel(cache.logs_data[channel.guild.id]["default-channel"])
        embed = discord.Embed(title="–£–¥–∞–ª–µ–Ω –∫–∞–Ω–∞–ª", description=f'''**–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:** `{channel.name}`\n\n**–¢–∏–ø –∫–∞–Ω–∞–ª–∞:** `{str(channel.type).replace("text", "–¢–µ–∫—Å—Ç–æ–≤—ã–π").replace("voice", "–ì–æ–ª–æ—Å–æ–≤–æ–π").replace("category", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è")}`\n\n**ID –∫–∞–Ω–∞–ª–∞:** `{channel.id}`\n\n**–ù–∞—Ö–æ–¥–∏–ª—Å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:** `{channel.category}`''')
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{channel.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{channel.guild.icon_url}")
        embed.set_author(name=f"{channel.guild.name}", icon_url=f"{channel.guild.icon_url}")
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_message_delete(self, message):
        channel1 = self.bot.get_channel(cache.logs_data[message.guild.id]["default-channel"])
        embed = discord.Embed(title="–£–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", description=f'''
        **–ê–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:** {message.author.mention}\n
        **–£–¥–∞–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ:** {message.channel.mention}\n
        **–°–æ–æ–±—â–µ–Ω–∏–µ:** `{message.content}`
        ''')
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_author(name=f"{message.author.name}#{message.author.discriminator}", icon_url=f"{message.author.avatar_url}")
        embed.set_footer(text=f'''{message.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{message.guild.icon_url}")
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_message_edit(self, before, after):
        row = ActionRow(
            Button(
                style=ButtonStyle.link,
                label="–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é",
                url=f"{before.jump_url}"
            )
        )
        channel1 = self.bot.get_channel(cache.logs_data[before.guild.id]["default-channel"])
        embed = discord.Embed()
        embed.add_field(name="–î–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: ", value=f"`{before.content}`", inline=False)
        embed.add_field(name="–ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: ", value=f"`{after.content}`", inline=False)
        embed.add_field(name="–í –∫–∞–Ω–∞–ª–µ: ", value=f"{after.channel.mention}", inline=False)
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_author(name=f"{before.author.name}#{before.author.discriminator}", icon_url=f"{before.author.avatar_url}")
        embed.set_footer(text=f'''{before.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{before.guild.icon_url}")
        await channel1.send(embed=embed, components=[row])

    @commands.Cog.listener()
    async def on_guild_role_create(self, role):
        channel1 = self.bot.get_channel(cache.logs_data[role.guild.id]["default-channel"])
        embed = discord.Embed(
            title="–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å",
            description=f'''
            **–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:** `{role.name}`\n
            **ID —Ä–æ–ª–∏:** `{role.id}`
            '''
        )
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{role.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{role.guild.icon_url}")
        embed.set_author(name=f"{role.guild.name}", icon_url=f"{role.guild.icon_url}")
        await channel1.send(embed=embed)
    
    @commands.Cog.listener()
    async def on_guild_role_update(self, before, after):
        channel1 = self.bot.get_channel(cache.logs_data[before.guild.id]["default-channel"])
        embed = discord.Embed(
            title="–ë—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å",
            description=f'''
            **–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:** `{before.name}`
            **–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:** `{after.name}`\n
            **–°—Ç–∞—Ä—ã–π —Ü–≤–µ—Ç —Ä–æ–ª–∏:** `{before.color}`
            **–ù–æ–≤—ã–π —Ü–≤–µ—Ç —Ä–æ–ª–∏:** `{after.color}`\n
            **–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** `{str(after.hoist).replace("True", "–î–∞").replace("False", "–ù–µ—Ç").replace("category", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è")}`
            ''')
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{before.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{after.guild.icon_url}")
        embed.set_author(name=f"{before.guild.name}", icon_url=f"{after.guild.icon_url}")
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_role_delete(self, role):
        channel1 = self.bot.get_channel(cache.logs_data[role.guild.id]["default-channel"])
        embed = discord.Embed(
            title="–£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å",
            description=f'''
            **–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:** `{role.name}`\n
            **ID —Ä–æ–ª–∏:** `{role.id}`
            '''
        )
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{role.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{role.guild.icon_url}")
        embed.set_author(name=f"{role.guild.name}", icon_url=f"{role.guild.icon_url}")
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_channel_update(self, before, after):
        channel1 = self.bot.get_channel(cache.logs_data[before.guild.id]["default-channel"])
        embed = discord.Embed(
            title="–ë—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –∫–∞–Ω–∞–ª",
            description=f'''
            **–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:** {before.name}
            **–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:** {after.name}\n
            **–°—Ç–∞—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏–ª—Å—è –∫–∞–Ω–∞–ª:** {before.category}
            **–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–∞–Ω–∞–ª:** {after.category}
            '''
        )
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{before.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{after.guild.icon_url}")
        embed.set_author(name=f"{before.guild.name}", icon_url=f"{after.guild.icon_url}")
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_member_update(self, before, after):
        channel1 = self.bot.get_channel(cache.logs_data[before.guild.id]["default-channel"])
        embed = discord.Embed()
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{before.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{after.guild.icon_url}")
        embed.set_author(name=f"{before.name}", icon_url=f"{after.avatar_url}")
        if before.nick != after.nick:
            embed.title = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {before.name}#{before.discriminator} –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω"
            embed.description = f'''
            **–°—Ç–∞—Ä—ã–π –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {str(before.nick).replace("None", f"{before.name}")}
            **–ù–æ–≤—ã–π –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {str(after.nick).replace("None", f"{after.name}")}'''
        elif before.roles != after.roles:
            embed.title = f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {before.name}#{before.discriminator} –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Ä–æ–ª–∏"
            embed.description = f'''
            **–°—Ç–∞—Ä—ã–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {before.roles[1]}
            **–ù–æ–≤—ã–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {after.roles[1]}'''
        elif before.status != after.status:
            embed.title = f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {before.name}#{before.discriminator} –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω —Å—Ç–∞—Ç—É—Å"
            embed.description = f'''
            **–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å:** {before.status}
            **–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:** {after.status}
            '''
        await channel1.send(embed=embed)

    @commands.Cog.listener()
    async def on_member_disconnect(self, channel, member):
        channel1 = self.bot.get_channel(cache.logs_data[channel.guild.id]["default-channel"])
        embed = discord.Embed()
        embed.description = f"–£—á–∞—Å—Ç–Ω–∏–∫ **{member.name}** ({member.mention})"
        embed.add_field(name="–í—Ä–µ–º—è: ", value=f'{datetime.datetime.now().strftime("%d.%m.%Y –≤ %H:%M:%S")}', inline=False)
        embed.set_footer(text=f'''{channel.guild.name} ‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –≤ {datetime.datetime.now().strftime("%H:%M")}''', icon_url=f"{channel.guild.icon_url}")
        embed.set_author(name=f"{channel.guild.name}", icon_url=f"{channel.guild.icon_url}")
        await channel1.send(embed=embed)


def setup(bot):
    bot.add_cog(Logs(bot))